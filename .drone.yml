workspace:
  base: /drone/workspace
  path: src/${DRONE_REPO_LINK##https://}

matrix:    
  # CPU_ARCH:
  #   - x86_64
  #   # - x86
  ROOT_PATH:
    - /drone/workspace/src
  REPO_PATH:
    - /drone/workspace/src/${DRONE_REPO_LINK##https://}
  DJ2_PATH:
    - /drone/workspace/src/${DRONE_REPO_LINK##https://}/QPKG/QDK/DJ2
  DJ2_SRC_PATH:
    - /drone/workspace/src/${DRONE_REPO_LINK##https://}/QPKG/QDK/DJ2/src
  APPS_BUILDED_TARGET:
    - /drone/workspace/src/${DRONE_REPO_LINK##https://}/QPKG/QDK/DJ2/${CPU_ARCH}

  # APP_NAME:
  #   - dj2-chat
  #   - dj2-watchers
  #   - dj2-schedule-daemon
  #   - DJ2Station 


services:
  docker: 
    image: mesosphere/mesos-slave-dind:0.3.0_mesos-1.0.1_docker-1.10.3_ubuntu-14.04.5
    privileged: true 
    command: [ "--tls=false", "-H", "0.0.0.0:6666" ]

pipeline:
  # restore-cache:
  #   image: drillster/drone-volume-cache
  #   restore: true
  #   volumes:
  #     - /share/CACHEDEV1_DATA/Container/container-station-data/tmp/drone:/cache
  #   mount:
  #     - ./QPKG/tools
  #     - ./QPKG/QDK/bin
  #     - ./docker
  #     - ./test
  #     - ./tools
  #     - ./123.txt

  test:
    image: mesosphere/mesos-slave-dind:0.3.0_mesos-1.0.1_docker-1.10.3_ubuntu-14.04.5
    # privileged: true 
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:6666
    commands:
      # - docker-compose --file apps_test_compose.yml up 
      - docker ps
      # - docker run qeekdev/golang:1.7.1-ubuntu ls ${REPO_PATH}

  
  test2:
    image: golang
    commands:
      - ls -al
      - echo PWD=$PWD
      - echo ROOT_PATH=${ROOT_PATH}
      - echo REPO_PATH=${REPO_PATH}
      - echo DJ2_PATH=${DJ2_PATH}
      - echo DJ2_SRC_PATH=${DJ2_SRC_PATH}
      - echo APPS_BUILDED_TARGET=${APPS_BUILDED_TARGET}
      - echo ${AAA}
      - echo $AAA

  # build_qpkg:
  #   image: docker:1.2.0
  #   privileged: true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   commands:
  #     - echo $PWD
  #     - echo "echo hello world" > a.sh
  #     - touch a.txt
  #     - ls -al
  #     - docker run --rm qeekdev/golang:1.7.1-ubuntu ls -al
  #     - docker run --rm -v $PWD:/drone/workspace/qpkg -w "/drone/workspace/qpkg" qeekdev/golang:1.7.1-ubuntu ls

  # dind:
  #   image: docker:1.13
  #   privileged: true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   commands:
  #   - docker ps


  # clone:
  #   image: plugins/git
  #   recursive: true
  #   tags: true
  #   submodule_update_remote: true
  #   # prevent clone error from private submodules
  #   submodule_override:
  #     - dj2-chat: https://github.com/qeek-dev/dj2-chat.git
  #     - dj2-watchers: https://github.com/qeek-dev/dj2-watchers.git
  #     - dj2-schedule-daemon: https://github.com/qeek-dev/dj2-schedule-daemon.git
  #     - DJ2Station: https://github.com/qeek-dev/DJ2Station.git
  #   # commands:
  #   #   - git submodule update --init --recursive --remote -- .
    
  # build_qpkg:
  #   image: docker:1.2.0
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   commands:
  #     - docker run --rm -v $PWD:/src -w /src qeekdev/golang:1.7.1-ubuntu bash -c "pwd && ls && bash build_qpkg_builder.sh x86_64 build 0.9.1 ."

    # build_api_server:
    #   image: qeekdev/golang:1.7.1-ubuntu
    #   commands:
    #     - echo === build $$APP_NAME... start ===
    #     # over write the GOPATH
    #     - echo "over write the GOPATH"
    #     - export GOPATH=$PWD/$$DJ2_FOLDER
    #     - echo $GOPATH
    #     # entery the dj2-chat source code
    #     - cd $$DJ2_FOLDER/src/$$APP_NAME
    #     # clone the specific submodule
    #     - git submodule update --init -- .
    #     # install go dependenicse
    #     - glide update
    #     - glide install
    #     # build the binary
    #     - go build -o $$APP_NAME .
    #     - echo === build $$APP_NAME... end ===

  # rebuild-cache:
  #   image: drillster/drone-volume-cache
  #   rebuild: true
  #   volumes:
  #     - /share/CACHEDEV1_DATA/Container/container-station-data/tmp/drone:/cache
  #   mount:
  #     - ./QPKG/tools
  #     - ./QPKG/QDK/bin
  #     - ./docker
  #     - ./test
  #     - ./tools
  #     - ./123.txt


